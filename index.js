import { Telegraf } from 'telegraf';
import { message } from 'telegraf/filters';
import 'dotenv/config';
import { contactsHandler, geminiHandler, promptHandler, studentHandler, technologyHandler } from './handlers.js';

const bot = new Telegraf(process.env.BOT_TOKEN);

const keyboard = {
  reply_markup: {
    keyboard: [
      [{ text: 'Ð¡Ñ‚ÑƒÐ´ÐµÐ½Ñ‚' }, { text: 'Ð†Ð¢-Ñ‚ÐµÑ…Ð½Ð¾Ð»Ð¾Ð³Ñ–Ñ—' }],
      [{ text: 'ÐšÐ¾Ð½Ñ‚Ð°ÐºÑ‚Ð¸' }, { text: 'ÐŸÑ€Ð¾Ð¼Ð¿Ñ‚' }],
    ],
    resize_keyboard: true,
  },
};

bot.start(async (ctx) => {
  const answer = `Ð’Ñ–Ñ‚Ð°ÑŽ! ðŸ‘‹\nÐžÐ±ÐµÑ€Ñ–Ñ‚ÑŒ Ð¾Ð´Ð½Ñƒ Ð· Ð¾Ð¿Ñ†Ñ–Ð¹ Ð½Ð° ÐºÐ»Ð°Ð²Ñ–Ð°Ñ‚ÑƒÑ€Ñ– Ð½Ð¸Ð¶Ñ‡Ðµ:`;
  await ctx.reply(answer, {
    ...keyboard,
  });
});

bot.hears('Ð¡Ñ‚ÑƒÐ´ÐµÐ½Ñ‚', studentHandler);

bot.hears('Ð†Ð¢-Ñ‚ÐµÑ…Ð½Ð¾Ð»Ð¾Ð³Ñ–Ñ—', technologyHandler);

bot.hears('ÐšÐ¾Ð½Ñ‚Ð°ÐºÑ‚Ð¸', contactsHandler);

bot.hears('ÐŸÑ€Ð¾Ð¼Ð¿Ñ‚', promptHandler);

bot.on(message('text'), geminiHandler);

bot.launch();

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
